package(default_visibility = ["//visibility:public"])

load("//tools:defaults.bzl", "ng_module", "ng_package")
load("//tools/highlight-files:index.bzl", "highlight_files")
load("//tools/package-docs-content:index.bzl", "package_docs_content")

EXAMPLE_PACKAGES = [
    "//src/components-examples/components/footer",
]

ng_module(
    name = "components-examples",
    srcs = glob(["*.ts"]) + [":example-module.ts"],
    module_name = "@gsa-sam/components-examples",
    deps = EXAMPLE_PACKAGES,
)

filegroup(
    name = "example-source-files",
    srcs = ["%s:source-files" % pkg for pkg in EXAMPLE_PACKAGES],
)

highlight_files(
    name = "highlighted-source-files",
    srcs = [":example-source-files"],
    tags = ["docs-package"],
)

package_docs_content(
    name = "docs-content",
    srcs = {
        "//src/components:overviews": "overviews/components",
        "//src:api-docs": "api-docs",
        ":example-source-files": "examples-source",
        ":highlighted-source-files": "examples-highlighted",
    },
    tags = ["docs-package"],
)

ng_package(
    name = "npm_package",
    srcs = ["package.json"],
    data = [":docs-content"],
    entry_point = ":public-api.ts",
    tags = ["docs-package"],
    deps = [":components-examples"] + EXAMPLE_PACKAGES,
)

genrule(
    name = "example-module",
    srcs = [":example-source-files"],
    outs = [
        "example-module.ts",
        "_example_module.MF",
    ],
    cmd = """
      # Create source file manifest
      echo "$(locations //src/components-examples:example-source-files)" \
          > $(location _example_module.MF)

      # Run the bazel entry-point for generating the example module.
      ./$(location //tools/example-module:bazel-bin) \
          "$(location _example_module.MF)" \
          "$(location example-module.ts)" \
          "$$PWD/src/components-examples"
    """,
    output_to_bindir = True,
    tools = ["//tools/example-module:bazel-bin"],
)
